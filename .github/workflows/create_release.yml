name: Create Add-on Release

on:
  workflow_dispatch:
    inputs:
      version:
        description: version string (eg. 6.1)
        required: true

jobs:
  create-release:
    name: Version ${{ github.event.inputs.version }}
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
        with:
          submodules: recursive
          fetch-depth: 0

      - name: Setup Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.8

      - name: Install dependencies
        run: |
          python -m pip install git+https://github.com/glutanimate/anki-addon-builder.git@4039b5bb743773a18cb2911e6dd38fa1e3f65982
          python -m pip install pyqt5

      - name: Setup git config
        run: |
          git config user.name "GitHub Actions Bot"
          git config user.email "<>"

      - name: Commit version bump and create tag
        run: |
          git commit --allow-empty -m "Bump Version to v${{ github.event.inputs.version }}"
          git push origin main
          git tag ${{ github.event.inputs.version }}
          git push origin tag ${{ github.event.inputs.version }}

      - name: Create ankiaddon file
        run: aab build -d ankiweb

      - name: Declare some variables
        id: vars
        shell: bash
        run: |
          echo "::set-output name=sha_short::$(git rev-parse --short HEAD)"
          echo "::set-output name=module_name::$(ls src)"
          echo "::set-output name=build_name::$(ls build | grep --color=never .ankiaddon)"
          echo "SHA_SHORT=$(git rev-parse --short HEAD)" >> $GITHUB_ENV
          echo "MODULE_NAME=$(ls src)" >> $GITHUB_ENV
          echo "BUILD_NAME=$(ls build | grep --color=never .ankiaddon)" >> $GITHUB_ENV

      - name: Print debugging information
        run: |
          echo "Build Directory Content:"
          ls build
          echo "ADDON_NAME: ${{ env.BUILD_NAME }}"

      - name: Create GitHub release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.event.inputs.version }}
          release_name: ${{ env.MODULE_NAME }} v${{ github.event.inputs.version }}
          draft: false
          prerelease: false

      - name: Upload release asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: build/${{ env.BUILD_NAME }}
          asset_name: ${{ env.BUILD_NAME }}
          asset_content_type: application/octet-stream
