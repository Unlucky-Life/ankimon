{
    "startup": "Ankimon Startup.",
    "failed_github": "Failed to fetch data from Github.",
    "catch_button": "Catch Pokemon",
    "defeat_button": "Defeat Pokemon",
    "enemy_pokemon_defeat_text": "Would you want to kill or catch the wild {enemy_pokemon_name} ?",
    "no_ability": "No ability",
    "battle_status_in_progress" : "Battle in progress",
    "level": "Level",
    "error_occured": "An error occured with {function} Please post this error message over the Report Bug Issue",
    "missing_mainpokemon_data": "Missing pokemon data",
    "pokemon_about_to_evolve": "{main_pokemon_name} is about to evolve to {evo_pokemon_name} at level {main_pokemon_level}",
    "mainpokemon_can_learn_new_attack": "Your {main_pokemon_name} can learn a new attack !",
    "mainpokemon_learned_new_attack": "Your {main_pokemon_name} learned {new_attack_name} !",
    "mainpokemon_gained_xp": "Your {main_pokemon_name} has gained {exp} XP.\n {experience_till_next_level} exp is needed for next level \n Your pokemon currently has {main_pokemon_xp}",
    "mainpokemon_has_evolved": "Your {prevo_name} has evolved to {evo_name}! \n You can now close this Window.",
    "no_attack_selected": "No attack selected",
    "selected_attack_not_found": "{selected_attack} not found in the list",
    "replaced_attack": "Replaced {selected_attack} with {new_attack}",
    "caught_wild_pokemon": "You caught a wild {enemy_pokemon_name} !",
    "already_caught_pokemon": "You have already caught this pokemon. Please close this window!",
    "multiplier": "Multiplier",
    "pokemon_chose_attack": "{pokemon_name} chose {pokemon_attack}!",
    "move_has_missed": "Move has missed !",
    "dmg_dealt": " {dmg} dmg is dealt to {pokemon_name}.",
    "pokemon_paralyzed": "{pokemon_name} is paralyzed.",
    "pokemon_asleep": "{pokemon_name} is asleep.",
    "pokemon_fainted": "{enemy_pokemon_name} has fainted.",
    "own_pokemon_fainted": "Your {main_pokemon_name} has been defeated and the wild {enemy_pokemon_name} has fled!",
    "picked_main_pokemon": "You picked {main_pokemon_name} as your main pokemon.",
    "show_collection_button": "Show Pokemon Collection",
    "open_ankimon_window_button": "Open Ankimon Window",
    "itembag_button": "Itembag",
    "achievements_button": "Achievements",
    "open_showdown_teambuilder_button": "Open Pokemon Showdown Teambuilder",
    "export_main_pokemon_button": "Export Main Pokemon to PkmnShowdown",
    "export_all_pokemon_button": "Export All Pokemon to PkmnShowdown",
    "export_all_pokemon_to_pokepaste_button": "Export All Pokemon to Pokepaste",
    "open_pokedex_button": "Open Pokedex",
    "eff_chart_button": "Check Effectiveness Chart",
    "gen_chart_button": "Check Generation Chart",
    "join_discord_button": "Join Discord Channel",
    "ankimon_credits_button": "Ankimon Credits",
    "ankimon_about_and_license_button": "Ankimon About and License",
    "open_help_guide_button": "Open Help Guide",
    "report_bug_button": "Report Bug",
    "rate_this_button": "Rate This Addon",
    "ankimon_version_button": "Ankimon Version",
    "ankimon_settings_button": "Ankimon Settings",
    "ankimon_data_button": "Ankimon Data",
    "ankimon_tracker_button": "Ankimon Tracker",
    "logger_button": "Logger",
    "trainer_card_button": "Trainer Card",
    "item_shop_button": "Item Shop",
    "choose_trainer_sprite_button": "Choose Trainer Sprite",
    "choose_pokemon_team_button": "Choose Pokemon Team",
    "ankimon_file_checker_button": "Ankimon File Checker",
    "ankimon_leaderboard_credentials_button": "Ankimon Leaderboard Credentials",
    "download_resources_button": "Download Resources",
    "backing_up_files": "Backing up files",
    "ankimon_button_title": "Ankimon",
    "ankimon_game_button_title": "Game",
    "ankimon_profile_button_title": "Profile",
    "ankimon_collection_button_title": "Collection",
    "ankimon_export_button_title": "Export",
    "ankimon_help_button_title": "Help",
    "ankimon_debug_button_title": "Debug",
    "backup_error": "An error occured while backing up files. Please check the console for more information.",
    "wild_pokemon_appeared": "A wild {enemy_pokemon_name} appeared !",
    "received_an_item": "You received an item: {item_name}",
    "received_a_badge": "You received a badge ",
    "catch_or_free": "Would you like to free or catch the wild {enemy_pokemon_name} ?",
    "choose_nickname": "Choose nickname",
    "enemy_attack_announcement": "{pokemon_name} used {attack_name}!",
    "player_attack_announcement": "{pokemon_name} used {attack_name}!",
    "damage_to_player_pokemon": "{pokemon_name} took {damage} damage!",
    "damage_to_enemy_pokemon": "{pokemon_name} took {damage} damage!",
    "enemy_attack_no_damage": "The attack had no effect on {pokemon_name}!",
    "player_attack_no_damage": "The attack had no effect on {pokemon_name}!",
    "special_battle_status_effect": "{pokemon_name} is affected by {status}!",
    "battle_effects_header": "=== Battle Effects ===",
    "battle_effect_damage": "{pokemon_side} took {damage} damage!",
    "battle_effect_heal": "{pokemon_side} recovered {heal_amount} HP!",
    "battle_effect_status_applied": "{pokemon_side} was inflicted with {status}!",
    "battle_effect_stat_change": "{pokemon_side}'s {stat} {direction} by {amount} stage(s)!",
    "battle_effect_volatile_status": "{pokemon_side} was affected by {status}!",
    "battle_effect_side_condition": "{condition} was set up on {side}!",
    "battle_effect_weather_change": "The weather changed to {weather}!",
    "battle_effect_processing_error": "Error processing battle effect: {error}",
    "battle_multiplier_display": "{multiplier}x Multiplier",

    "effect_volatile_status_applied": "{pokemon_side} is affected by {status}!",
    "effect_volatile_status_removed": "{pokemon_side} is no longer affected by {status}!",
    
    
    "attack_no_effect_short": "It had no effect on {pokemon_name}!",
    "damage_dealt_short": "It dealt {damage} damage to {pokemon_name}!",
    
    "enemy_pokemon_fainted": "{pokemon_name} fainted!",
    "player_pokemon_fainted": "{pokemon_name} fainted!",
    
    "pokemon_is_sleeping": "{pokemon_name} is fast asleep!",
    "pokemon_is_paralyzed": "{pokemon_name} is paralyzed! It can't move!",
    "pokemon_is_frozen": "{pokemon_name} is frozen solid!",
    "pokemon_is_burned": "{pokemon_name} is hurt by its burn!",
    "pokemon_is_poisoned": "{pokemon_name} is hurt by poison!",
    "pokemon_is_badly_poisoned": "{pokemon_name} is badly poisoned!",
    "pokemon_is_confused": "{pokemon_name} is confused!",
    "pokemon_flinched": "{pokemon_name} flinched and couldn't move!",
    "pokemon_is_taunted": "{pokemon_name} can't use {move_name} after the taunt!",
    "pokemon_special_condition": "{pokemon_name} is affected by {condition}!",
    
    "effect_damage_dealt": "{pokemon_side} took {damage} damage!",
    "effect_health_restored": "{pokemon_side} restored {heal_amount} HP!",
    "effect_status_applied": "{pokemon_side} was afflicted with {status}!",
    "effect_stat_change": "{pokemon_side}'s {stat} {direction} by {amount} stage(s)!",
    "effect_volatile_status": "{pokemon_side} was affected by {status}!",
    "effect_side_condition": "{side} is protected by {condition}!",
    "effect_weather_change": "The weather changed to {weather}!",

    "battle_effect_weather_start": "The weather changed to {weather}!",
    "battle_effect_weather_end": "The {weather} weather has ended!",
    
    "your_pokemon": "Your Pokémon",
    "enemy_pokemon": "The opposing Pokémon",
    "your_side": "your team",
    "enemy_side": "the opposing team",
    "stat_increased": "increased",
    "stat_decreased": "decreased",
    
    "invalid_battle_data_error": "Battle data is invalid!",
    "battle_effects_error": "Error processing battle effects: {error}",
    "battle_processing_error": "Error in battle processing: {error}",
    "battle_message_empty_fallback": "Battle concluded.",
    
    "super_effective": "It's super effective!",
    "not_very_effective": "It's not very effective...",
    "critical_hit": "A critical hit!",
    "move_missed": "The attack missed!",
    "move_failed": "But it failed!",

    "volatile_solar_beam_apply": "{pokemon_side} is gathering sunlight!",
    "volatile_solar_beam_remove": "{pokemon_side} unleashes its stored solar energy!",
    "volatile_sky_attack_apply": "{pokemon_side} becomes cloaked in harsh light!",
    "volatile_sky_attack_remove": "{pokemon_side} strikes with tremendous power!",
    "volatile_razor_wind_apply": "{pokemon_side} whips up a whirlwind!",
    "volatile_razor_wind_remove": "{pokemon_side} releases the cutting wind!",
    "volatile_skull_bash_apply": "{pokemon_side} withdraws into its shell!",
    "volatile_skull_bash_remove": "{pokemon_side} charges forward with its hardened skull!",
    "volatile_freeze_shock_apply": "{pokemon_side} is building up electrical energy!",
    "volatile_freeze_shock_remove": "{pokemon_side} releases a freezing electrical attack!",
    "volatile_ice_burn_apply": "{pokemon_side} is gathering frigid flames!",
    "volatile_ice_burn_remove": "{pokemon_side} strikes with burning ice!",
    "volatile_geomancy_apply": "{pokemon_side} is absorbing power from the land!",
    "volatile_geomancy_remove": "{pokemon_side} harnesses the earth's energy!",

    "volatile_fly_apply": "{pokemon_side} flies up high!",
    "volatile_fly_remove": "{pokemon_side} dives down for an attack!",
    "volatile_dig_apply": "{pokemon_side} burrows underground!",
    "volatile_dig_remove": "{pokemon_side} attacks from below!",
    "volatile_dive_apply": "{pokemon_side} dives underwater!",
    "volatile_dive_remove": "{pokemon_side} surfaces with an attack!",
    "volatile_bounce_apply": "{pokemon_side} bounces up high!",
    "volatile_bounce_remove": "{pokemon_side} bounces down for an attack!",
    "volatile_phantom_force_apply": "{pokemon_side} vanishes into another dimension!",
    "volatile_phantom_force_remove": "{pokemon_side} attacks from the shadows!",
    "volatile_shadow_force_apply": "{pokemon_side} disappears into the shadows!",
    "volatile_shadow_force_remove": "{pokemon_side} strikes from the darkness!",
    "volatile_sky_drop_apply": "{pokemon_side} takes the target into the sky!",
    "volatile_sky_drop_remove": "{pokemon_side} drops down with the target!",

    "volatile_wrap_apply": "{pokemon_side} wraps around the target!",
    "volatile_wrap_remove": "{pokemon_side} releases its grip!",
    "volatile_bind_apply": "{pokemon_side} binds the target tightly!",
    "volatile_bind_remove": "{pokemon_side} loosens its binding!",
    "volatile_fire_spin_apply": "{pokemon_side} traps the target in a vortex of fire!",
    "volatile_fire_spin_remove": "The fiery vortex dissipates!",
    "volatile_whirlpool_apply": "{pokemon_side} traps the target in a whirlpool!",
    "volatile_whirlpool_remove": "The whirlpool subsides!",
    "volatile_sand_tomb_apply": "{pokemon_side} traps the target in a sand tomb!",
    "volatile_sand_tomb_remove": "The sand tomb crumbles away!",
    "volatile_magma_storm_apply": "{pokemon_side} traps the target in a vortex of molten rock!",
    "volatile_magma_storm_remove": "The magma storm dies down!",
    "volatile_infestation_apply": "{pokemon_side} infests the target!",
    "volatile_infestation_remove": "The infestation ends!",
    "volatile_snap_trap_apply": "{pokemon_side} traps the target in a snap trap!",
    "volatile_snap_trap_remove": "The snap trap releases!",

    "volatile_roost_apply": "{pokemon_side} temporarily loses its Flying type!",
    "volatile_roost_remove": "{pokemon_side}'s Flying type is restored!",
    "volatile_burn_up_apply": "{pokemon_side} loses its Fire type!",
    "volatile_burn_up_remove": "{pokemon_side}'s Fire type is restored!",
    "volatile_double_shock_apply": "{pokemon_side} loses its Electric type!",
    "volatile_double_shock_remove": "{pokemon_side}'s Electric type is restored!",

    "volatile_disable_apply": "{pokemon_side} has a move disabled!",
    "volatile_disable_remove": "{pokemon_side} can use all moves again!",
    "volatile_encore_apply": "{pokemon_side} must repeat its last move!",
    "volatile_encore_remove": "{pokemon_side} is no longer forced to repeat its move!",
    "volatile_taunt_apply": "{pokemon_side} is taunted and can't use status moves!",
    "volatile_taunt_remove": "{pokemon_side} is no longer taunted!",
    "volatile_torment_apply": "{pokemon_side} can't use the same move twice in a row!",
    "volatile_torment_remove": "{pokemon_side} is no longer tormented!",
    "volatile_imprison_apply": "{pokemon_side} can't use moves known by the opponent!",
    "volatile_imprison_remove": "{pokemon_side} is no longer imprisoned!",
    "volatile_throat_chop_apply": "{pokemon_side} can't use sound-based moves!",
    "volatile_throat_chop_remove": "{pokemon_side} can use sound-based moves again!",
    "volatile_heal_block_apply": "{pokemon_side} can't heal itself!",
    "volatile_heal_block_remove": "{pokemon_side} can heal again!",
    "volatile_embargo_apply": "{pokemon_side} can't use its held item!",
    "volatile_embargo_remove": "{pokemon_side} can use its held item again!",

    "volatile_confusion_apply": "{pokemon_side} becomes confused!",
    "volatile_confusion_remove": "{pokemon_side} snaps out of confusion!",
    "volatile_infatuation_apply": "{pokemon_side} falls in love!",
    "volatile_infatuation_remove": "{pokemon_side} is no longer infatuated!",

    "volatile_leech_seed_apply": "{pokemon_side} is seeded!",
    "volatile_leech_seed_remove": "{pokemon_side} is no longer seeded!",
    "volatile_curse_ghost_apply": "{pokemon_side} is cursed!",
    "volatile_curse_ghost_remove": "{pokemon_side} is no longer cursed!",
    "volatile_nightmare_apply": "{pokemon_side} is trapped in a nightmare!",
    "volatile_nightmare_remove": "{pokemon_side} wakes from its nightmare!",
    "volatile_perish_song_apply": "{pokemon_side} hears the Perish Song! It will faint in 3 turns!",
    "volatile_perish_song_remove": "{pokemon_side} escapes the Perish Song!",
    "volatile_salt_cure_apply": "{pokemon_side} is cured with salt!",
    "volatile_salt_cure_remove": "{pokemon_side} is no longer affected by salt cure!",

    "volatile_substitute_apply": "{pokemon_side} creates a substitute!",
    "volatile_substitute_remove": "{pokemon_side}'s substitute fades away!",
    "volatile_endure_apply": "{pokemon_side} braces itself!",
    "volatile_endure_remove": "{pokemon_side} stops bracing!",
    "volatile_protect_apply": "{pokemon_side} protects itself!",
    "volatile_protect_remove": "{pokemon_side}'s protection fades!",
    "volatile_baneful_bunker_apply": "{pokemon_side} protects itself with a poisonous barrier!",
    "volatile_baneful_bunker_remove": "{pokemon_side}'s barrier fades!",
    "volatile_spiky_shield_apply": "{pokemon_side} protects itself with a spiky barrier!",
    "volatile_spiky_shield_remove": "{pokemon_side}'s spiky barrier fades!",
    "volatile_kings_shield_apply": "{pokemon_side} takes a defensive stance!",
    "volatile_kings_shield_remove": "{pokemon_side} returns to normal stance!",

    "volatile_magnet_rise_apply": "{pokemon_side} levitated with magnetism!",
    "volatile_magnet_rise_remove": "{pokemon_side} touches down!",
    "volatile_telekinesis_apply": "{pokemon_side} is held in the air by telekinesis!",
    "volatile_telekinesis_remove": "{pokemon_side} is released from telekinesis!",
    "volatile_ingrain_apply": "{pokemon_side} plants its roots!",
    "volatile_ingrain_remove": "{pokemon_side} uproots itself!",
    "volatile_aqua_ring_apply": "{pokemon_side} surrounds itself with a veil of water!",
    "volatile_aqua_ring_remove": "{pokemon_side}'s water veil disappears!",
    "volatile_smack_down_apply": "{pokemon_side} is knocked to the ground!",
    "volatile_smack_down_remove": "{pokemon_side} can fly again!",

    "volatile_outrage_apply": "{pokemon_side} goes on a rampage!",
    "volatile_outrage_remove": "{pokemon_side} calms down and becomes confused!",
    "volatile_thrash_apply": "{pokemon_side} thrashes about!",
    "volatile_thrash_remove": "{pokemon_side} stops thrashing and becomes confused!",
    "volatile_petal_dance_apply": "{pokemon_side} dances with petals!",
    "volatile_petal_dance_remove": "{pokemon_side} stops dancing and becomes confused!",
    "volatile_rollout_apply": "{pokemon_side} begins rolling!",
    "volatile_rollout_remove": "{pokemon_side} stops rolling!",
    "volatile_ice_ball_apply": "{pokemon_side} begins rolling an ice ball!",
    "volatile_ice_ball_remove": "{pokemon_side} stops rolling the ice ball!",
    "volatile_uproar_apply": "{pokemon_side} causes an uproar!",
    "volatile_uproar_remove": "{pokemon_side} calms down!",

    "volatile_charge_apply": "{pokemon_side} charges power!",
    "volatile_charge_remove": "{pokemon_side} uses its charged power!",
    "volatile_stockpile_apply": "{pokemon_side} stockpiled energy!",
    "volatile_stockpile_remove": "{pokemon_side} released its stockpiled energy!",
    "volatile_defense_curl_apply": "{pokemon_side} curled up!",
    "volatile_defense_curl_remove": "{pokemon_side} uncurled!",
    "volatile_minimize_apply": "{pokemon_side} minimized its body!",
    "volatile_minimize_remove": "{pokemon_side} returns to normal size!",

    "volatile_lock_on_apply": "{pokemon_side} takes aim!",
    "volatile_lock_on_remove": "{pokemon_side} loses its lock-on!",
    "volatile_mind_reader_apply": "{pokemon_side} reads the target's mind!",
    "volatile_mind_reader_remove": "{pokemon_side} stops reading the target's mind!",
    "volatile_foresight_apply": "{pokemon_side} identified the target!",
    "volatile_foresight_remove": "{pokemon_side} loses sight of the target!",
    "volatile_odor_sleuth_apply": "{pokemon_side} identified the target by scent!",
    "volatile_odor_sleuth_remove": "{pokemon_side} loses the scent!",
    "volatile_miracle_eye_apply": "{pokemon_side} identified the target with miraculous sight!",
    "volatile_miracle_eye_remove": "{pokemon_side} loses its miraculous sight!",

    "volatile_follow_me_apply": "{pokemon_side} becomes the center of attention!",
    "volatile_follow_me_remove": "{pokemon_side} is no longer the center of attention!",
    "volatile_rage_powder_apply": "{pokemon_side} draws attention with rage powder!",
    "volatile_rage_powder_remove": "{pokemon_side} stops drawing attention!",
    "volatile_spotlight_apply": "{pokemon_side} is in the spotlight!",
    "volatile_spotlight_remove": "{pokemon_side} is no longer in the spotlight!",

    "volatile_mean_look_apply": "{pokemon_side} can't escape!",
    "volatile_mean_look_remove": "{pokemon_side} can escape again!",
    "volatile_block_apply": "{pokemon_side} is blocked from escaping!",
    "volatile_block_remove": "{pokemon_side} can escape again!",
    "volatile_spider_web_apply": "{pokemon_side} is trapped in a web!",
    "volatile_spider_web_remove": "{pokemon_side} breaks free from the web!",
    "volatile_anchor_shot_apply": "{pokemon_side} is anchored and can't escape!",
    "volatile_anchor_shot_remove": "{pokemon_side} is no longer anchored!",
    "volatile_spirit_shackle_apply": "{pokemon_side}'s spirit is shackled!",
    "volatile_spirit_shackle_remove": "{pokemon_side}'s spirit is free!",
    "volatile_thousand_waves_apply": "{pokemon_side} is trapped by waves!",
    "volatile_thousand_waves_remove": "{pokemon_side} escapes the waves!",
    "volatile_octolock_apply": "{pokemon_side} is locked by the octopus!",
    "volatile_octolock_remove": "{pokemon_side} escapes the octolock!",
    "volatile_no_retreat_apply": "{pokemon_side} can no longer retreat!",
    "volatile_no_retreat_remove": "{pokemon_side} can retreat again!",
    "volatile_jaw_lock_apply": "{pokemon_side} locks jaws and can't escape!",
    "volatile_jaw_lock_remove": "{pokemon_side} unlocks its jaws!",

    "volatile_hyper_beam_apply": "{pokemon_side} must recharge!",
    "volatile_hyper_beam_remove": "{pokemon_side} finishes recharging!",
    "volatile_giga_impact_apply": "{pokemon_side} must recharge!",
    "volatile_giga_impact_remove": "{pokemon_side} finishes recharging!",
    "volatile_blast_burn_apply": "{pokemon_side} must recharge!",
    "volatile_blast_burn_remove": "{pokemon_side} finishes recharging!",
    "volatile_frenzy_plant_apply": "{pokemon_side} must recharge!",
    "volatile_frenzy_plant_remove": "{pokemon_side} finishes recharging!",
    "volatile_hydro_cannon_apply": "{pokemon_side} must recharge!",
    "volatile_hydro_cannon_remove": "{pokemon_side} finishes recharging!",
    "volatile_rock_wrecker_apply": "{pokemon_side} must recharge!",
    "volatile_rock_wrecker_remove": "{pokemon_side} finishes recharging!",
    "volatile_roar_of_time_apply": "{pokemon_side} must recharge!",
    "volatile_roar_of_time_remove": "{pokemon_side} finishes recharging!",

    "volatile_status_unknown_apply": "{pokemon_side} is affected by {status_name}!",
    "volatile_status_unknown_remove": "{pokemon_side} is no longer affected by {status_name}!"
}

